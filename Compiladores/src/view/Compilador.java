/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import entidades.Arquivo;
import gals.LexicalError;
import gals.Lexico;
import gals.SemanticError;
import gals.Semantico;
import gals.Sintatico;
import gals.SyntaticError;
import gals.Token;
import java.io.FileWriter;
import java.io.StringReader;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author BOSS
 */
public class Compilador extends javax.swing.JFrame {

    /**
     * Creates new form Compilador
     */
    public Compilador() {
        initComponents();


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jMenu1.setText("Arquivo");

        jMenuItem6.setText("Novo");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuItem2.setText("Salvar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalvarArquivo(evt);
            }
        });
        jMenu1.add(jMenuItem2);
        jMenuItem2.getAccessibleContext().setAccessibleParent(jMenu1);

        jMenuItem1.setText("Abrir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirArquivo(evt);
            }
        });
        jMenu1.add(jMenuItem1);
        jMenuItem1.getAccessibleContext().setAccessibleParent(jMenu1);

        jMenuItem3.setText("Sair");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sair(evt);
            }
        });
        jMenu1.add(jMenuItem3);
        jMenuItem3.getAccessibleContext().setAccessibleParent(jMenu1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Léxico");

        jMenuItem4.setText("Analisar");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analiseLexica(evt);
            }
        });
        jMenu2.add(jMenuItem4);
        jMenuItem4.getAccessibleContext().setAccessibleParent(jMenu2);

        jMenuBar1.add(jMenu2);

        jMenu4.setText("Sintático");

        jMenuItem5.setText("Analisar");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analiseSintatica(evt);
            }
        });
        jMenu4.add(jMenuItem5);

        jMenuBar1.add(jMenu4);

        jMenu3.setText("Semantico");

        jMenuItem7.setText("Analisar");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analiseSemantica(evt);
            }
        });
        jMenu3.add(jMenuItem7);
        jMenuItem7.getAccessibleContext().setAccessibleName("Compilar");

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 882, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AbrirArquivo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirArquivo

        JFileChooser chooser = new JFileChooser();
        String caminho = "";
        int retorno = chooser.showOpenDialog(null);
        if (retorno == JFileChooser.APPROVE_OPTION) {
            caminho = chooser.getSelectedFile().getAbsolutePath();
            if ((caminho.endsWith(".txt") || caminho.endsWith(".lsi") || caminho.endsWith(".TXT") || caminho.endsWith(".LSI"))) {
                jTextArea1.setText(new Arquivo().abrirArquivo(caminho));
            } else {
                JOptionPane.showMessageDialog(null, "Somente arquivos .txt ou .lsi");
                AbrirArquivo(evt);
            }
        }
    }//GEN-LAST:event_AbrirArquivo

    private void Sair(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sair
        System.exit(0);
    }//GEN-LAST:event_Sair

    private void SalvarArquivo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalvarArquivo

        JFileChooser chooser = new JFileChooser();
        String caminho = "";
        FileWriter file = null;
        int retorno = chooser.showSaveDialog(null);

        if (retorno == JFileChooser.APPROVE_OPTION) {
            caminho = chooser.getSelectedFile().getAbsolutePath();
            try {
                if ((caminho.endsWith(".txt") || caminho.endsWith(".lsi") || caminho.endsWith(".TXT") || caminho.endsWith(".LSI"))) {
                    file = new FileWriter(caminho);
                } else {
                    JOptionPane.showMessageDialog(null, "Somente arquivos .txt ou .lsi");
                }

            } catch (Exception e) {
                System.out.println("Erro ao salvar arquivo. " + e.getMessage());
            }

            if (file == null) {
                SalvarArquivo(evt);
            } else {
                new Arquivo(jTextArea1.getText()).gravarArquivo(file);
            }
        }
    }//GEN-LAST:event_SalvarArquivo

    private void analiseLexica(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analiseLexica

        Lexico analisadorLexico = getAnalisadorLexico();
        if (analisadorLexico == null) {
            return;
        }
        try {
            Token t = null;
            while ((t = analisadorLexico.nextToken()) != null) {
                System.out.println(t.getLexeme());
            }
            JOptionPane.showMessageDialog(null, "Análise Léxica efetuada com sucesso");
        } catch (LexicalError e) {
            JOptionPane.showMessageDialog(null, "Erro: " + e.getMessage() + ".  Posição: " + e.getPosition());
            System.out.println("Erro: " + e.getMessage() + "Posição: " + e.getPosition());
            jTextArea1.setCaretPosition(e.getPosition());
        }





    }//GEN-LAST:event_analiseLexica

    private void analiseSintatica(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analiseSintatica

        Lexico analisadorLexico = getAnalisadorLexico();
        if (analisadorLexico == null) {
            return;
        }
        Sintatico analisadorSintatico = new Sintatico();
        try {
            analisadorSintatico.setEstadoAnaliseSemantica(false);
            analisadorSintatico.parse(analisadorLexico, null);
            JOptionPane.showMessageDialog(null, "Análise Sintática efetuada com sucesso");
        } catch (LexicalError ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex.getMessage() + ".  Posição: " + ex.getPosition());
            jTextArea1.setCaretPosition(ex.getPosition());
        } catch (SyntaticError ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex.getMessage() + ".  Posição: " + ex.getPosition());
            jTextArea1.setCaretPosition(ex.getPosition());
        } catch (SemanticError ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex.getMessage() + ".  Posição: " + ex.getPosition());

        }


    }//GEN-LAST:event_analiseSintatica

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        jTextArea1.setText("");
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void analiseSemantica(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analiseSemantica
        Lexico analisadorLexico = getAnalisadorLexico();
         if (analisadorLexico == null) {
            return;
        }
        Sintatico analisadorSintatico = new Sintatico();
        Semantico semantica = new Semantico();

        try {
            analisadorSintatico.setEstadoAnaliseSemantica(true);
            analisadorSintatico.parse(analisadorLexico, semantica);
            JOptionPane.showMessageDialog(null, "Análise Semântica efetuada com sucesso");
        } catch (LexicalError ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex.getMessage() + ".  Posição: " + ex.getPosition());
            jTextArea1.setCaretPosition(ex.getPosition());
        } catch (SyntaticError ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex.getMessage() + ".  Posição: " + ex.getPosition());
            jTextArea1.setCaretPosition(ex.getPosition());
        } catch (SemanticError ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex.getMessage() + ".  Posição: " + ex.getPosition());
            jTextArea1.setCaretPosition(ex.getPosition());

        }
    }//GEN-LAST:event_analiseSemantica

    private Lexico getAnalisadorLexico() {
        if (jTextArea1.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "É necessário informar pelo menos um caractere para ser analisado!");
            return null;
        }

        return new Lexico(new StringReader(jTextArea1.getText()));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Compilador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Compilador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Compilador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Compilador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Compilador().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
